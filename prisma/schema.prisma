// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id              Int       @id @default(autoincrement())
  username        String?
  email           String?   @unique
  password        String
  remember_status String?
  token           String?
  role            Int
  stock           Int
  wallets         Wallet[]  @relation(name: "UserToWallet")
  imageList       Images[]  @relation(name: "ImagesToUser")
  created_at      DateTime
  updated_at      DateTime?
  lastaccess_time DateTime?
}

model Wallet {
  id          Int       @id @default(autoincrement())
  userwallet  User      @relation(name: "UserToWallet", fields: [userid], references: [id])
  userid      Int
  amount      Decimal       @db.Decimal(10,2)
  method      String?
  accept_status Int?  @default(0)
  created_at  DateTime
  accepted_at DateTime?
  updated_at  DateTime?
}

model Images {
  id            Int       @id @default(autoincrement())
  tokenId       BigInt?   @unique
  path          String?
  videotoken    BigInt?
  userImage     User      @relation(name: "ImagesToUser", fields: [userid], references: [id])
  userid        Int
  created_at    DateTime?
  delete_status Boolean?
}

model Videos {
  id         Int       @id @default(autoincrement())
  userid     Int
  imageid    Int
  videotoken BigInt
  videopath  String?
  created_at DateTime
  updated_at DateTime?
}

model notifypayment {
  id         Int       @id @default(autoincrement())
  wallet_id  Int       @unique
  userid     Int       
  created_at DateTime?
}

